openapi: 3.0.3
info:
    title: An api for clients
    description: This API manages clients with CRUD operations
    version: 0.0.1
servers:
    - url: http://localhost:8080/api/v1
paths:
    /api/v1/client:
        get:
            tags:
                - client
            summary: show client
            operationId: client#show
            parameters:
                - name: X-Authorization
                  in: header
                  description: JWT used for authentication
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: JWT used for authentication
                    example: Sapiente facere iusto.
                  example: Est molestias.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientManagementCollection'
                            example:
                                - ClientID: ABCDEF12356890
                                  ClientName: John Doe Limited
                                  ContactEmail: john.doe@johndoe.com
                                  ContactMobile: 12365474235
                                  ContactName: John Doe
                                - ClientID: ABCDEF12356890
                                  ClientName: John Doe Limited
                                  ContactEmail: john.doe@johndoe.com
                                  ContactMobile: 12365474235
                                  ContactName: John Doe
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Officia tenetur autem ipsam repellat.
                            example: Quia voluptate.
                "403":
                    description: 'invalid-scopes: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Provident porro.
                            example: Rerum non vel.
            security:
                - jwt_header_X-Authorization:
                    - api:read
    /api/v1/client/{ClientID}:
        get:
            tags:
                - client
            summary: get client
            operationId: client#get
            parameters:
                - name: ClientID
                  in: path
                  description: Client ID
                  required: true
                  schema:
                    type: string
                    description: Client ID
                    example: Ut vel necessitatibus non et necessitatibus.
                  example: Corrupti dolore delectus nam quia.
                - name: X-Authorization
                  in: header
                  description: JWT used for authentication
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: JWT used for authentication
                    example: Atque reiciendis explicabo.
                  example: Aut tempore eos aut quae sit voluptate.
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientManagement'
                            example:
                                ClientID: ABCDEF12356890
                                ClientName: John Doe Limited
                                ContactEmail: john.doe@johndoe.com
                                ContactMobile: 12365474235
                                ContactName: John Doe
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Quas tempora magnam.
                            example: Molestias ex quam esse ducimus recusandae rerum.
                "403":
                    description: 'invalid-scopes: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Recusandae autem et modi.
                            example: Architecto quod minima sed eius.
            security:
                - jwt_header_X-Authorization:
                    - api:read
        post:
            tags:
                - client
            summary: add client
            operationId: client#add
            parameters:
                - name: ClientID
                  in: path
                  description: Client ID
                  required: true
                  schema:
                    type: string
                    description: Client ID
                    example: Eos et.
                  example: Explicabo sed ut molestias pariatur.
                - name: X-Authorization
                  in: header
                  description: JWT used for authentication
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: string
                    description: JWT used for authentication
                    example: Id laudantium qui.
                  example: Laborum ut velit rerum qui.
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddRequestBody'
                        example:
                            ClientName: Ducimus sapiente suscipit consequatur minima animi.
                            ContactEmail: Id enim deleniti qui est ab.
                            ContactMobile: 3474453470839196953
                            ContactName: Magnam quod ratione provident consequatur ea esse.
            responses:
                "201":
                    description: Created response.
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Aut quod commodi dignissimos.
                            example: Assumenda eveniet.
                "403":
                    description: 'invalid-scopes: Forbidden response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Quod non magnam tempora.
                            example: Possimus labore ex animi nobis eius.
            security:
                - jwt_header_X-Authorization:
                    - api:write
    /openapi.json:
        get:
            tags:
                - client
            summary: Download ./gen/http/openapi.json
            operationId: client#/openapi.json
            responses:
                "200":
                    description: File downloaded
    /signin/authenticate:
        post:
            tags:
                - signin
            summary: authenticate signin
            description: Creates a valid JWT
            operationId: signin#authenticate
            responses:
                "200":
                    description: OK response.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Creds'
                            example:
                                jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
                "401":
                    description: 'unauthorized: Unauthorized response.'
                    content:
                        application/json:
                            schema:
                                type: string
                                example: Quod possimus.
                            example: Deserunt quaerat minima qui repudiandae velit similique.
            security:
                - basic_header_Authorization: []
components:
    schemas:
        AddRequestBody:
            type: object
            properties:
                ClientName:
                    type: string
                    description: Client ID
                    example: Eius tempore.
                ContactEmail:
                    type: string
                    description: Contact Email
                    example: Repellendus qui ducimus voluptatem.
                ContactMobile:
                    type: integer
                    description: Contact Mobile Number
                    example: 2854910961833752498
                    format: int64
                ContactName:
                    type: string
                    description: Contact Name
                    example: Dolorum quaerat dolore vitae cumque eaque.
            example:
                ClientName: Sunt ut aspernatur sit nemo.
                ContactEmail: Repellendus in quam sit.
                ContactMobile: 3589565631694721167
                ContactName: Tempora doloremque dolorem asperiores.
            required:
                - ClientName
                - ContactName
                - ContactEmail
                - ContactMobile
        ClientManagement:
            type: object
            properties:
                ClientID:
                    type: string
                    description: ID is the unique id of the Client.
                    example: ABCDEF12356890
                ClientName:
                    type: string
                    description: Name of the Client
                    example: John Doe Limited
                ContactEmail:
                    type: string
                    description: Email of the Client Contact
                    example: john.doe@johndoe.com
                ContactMobile:
                    type: integer
                    description: Mobile number of the Client Contact
                    example: 12365474235
                    format: int64
                ContactName:
                    type: string
                    description: Name of the Contact.
                    example: John Doe
            example:
                ClientID: ABCDEF12356890
                ClientName: John Doe Limited
                ContactEmail: john.doe@johndoe.com
                ContactMobile: 12365474235
                ContactName: John Doe
            required:
                - ClientID
                - ClientName
                - ContactName
                - ContactEmail
                - ContactMobile
        ClientManagementCollection:
            type: array
            items:
                $ref: '#/components/schemas/ClientManagement'
            example:
                - ClientID: ABCDEF12356890
                  ClientName: John Doe Limited
                  ContactEmail: john.doe@johndoe.com
                  ContactMobile: 12365474235
                  ContactName: John Doe
                - ClientID: ABCDEF12356890
                  ClientName: John Doe Limited
                  ContactEmail: john.doe@johndoe.com
                  ContactMobile: 12365474235
                  ContactName: John Doe
                - ClientID: ABCDEF12356890
                  ClientName: John Doe Limited
                  ContactEmail: john.doe@johndoe.com
                  ContactMobile: 12365474235
                  ContactName: John Doe
        Creds:
            type: object
            properties:
                jwt:
                    type: string
                    description: JWT token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            example:
                jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            required:
                - jwt
    securitySchemes:
        basic_header_Authorization:
            type: http
            description: Basic authentication used to authenticate security principal during signin
            scheme: basic
        jwt_header_X-Authorization:
            type: http
            description: |-
                Secures endpoint by requiring a valid
                JWT token retrieved via the signin endpoint. Supports
                scopes "api:read" and "api:write".
            scheme: bearer
tags:
    - name: client
      description: The Client service allows access to client members
    - name: signin
      description: The Signin service authenticates users and validate tokens
