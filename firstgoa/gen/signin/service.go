// Code generated by goa v3.16.1, DO NOT EDIT.
//
// signin service
//
// Command:
// $ goa gen learngo.io/firstgoa/design

package signin

import (
	"context"

	"goa.design/goa/v3/security"
)

// The Signin service authenticates users and validate tokens
type Service interface {
	// Creates a valid JWT
	Authenticate(context.Context, *AuthenticatePayload) (res *Creds, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// BasicAuth implements the authorization logic for the Basic security scheme.
	BasicAuth(ctx context.Context, user, pass string, schema *security.BasicScheme) (context.Context, error)
}

// APIName is the name of the API as defined in the design.
const APIName = "clients"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "signin"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"authenticate"}

// Credentials used to authenticate to retrieve JWT token
type AuthenticatePayload struct {
	// Username used to perform signin
	Username string
	// Password used to perform signin
	Password string
}

// Creds is the result type of the signin service authenticate method.
type Creds struct {
	// JWT token
	JWT string
}

// Credentials are invalid
type Unauthorized string

// Error returns an error description.
func (e Unauthorized) Error() string {
	return "Credentials are invalid"
}

// ErrorName returns "unauthorized".
//
// Deprecated: Use GoaErrorName - https://github.com/goadesign/goa/issues/3105
func (e Unauthorized) ErrorName() string {
	return e.GoaErrorName()
}

// GoaErrorName returns "unauthorized".
func (e Unauthorized) GoaErrorName() string {
	return "unauthorized"
}
